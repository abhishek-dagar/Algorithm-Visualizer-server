import { ChartTracer, Tracer } from './';
export default class Array1DTracer extends Tracer {
    /**
     * Set an array to visualize.
     *
     * @param array1d
     */
    set(array1d?: any[]): void;
    /**
     * Notify that a value has been changed.
     *
     * @param x The index of the array.
     * @param v The new value to change to.
     */
    patch(x: number, v?: any): void;
    /**
     * Stop notifying that a value has been changed.
     *
     * @param x The index of the array.
     */
    depatch(x: number): void;
    /**
     * Select indices of the array.
     *
     * @param sx The index to select inclusively from.
     * @param ex The index to select inclusively to. If omitted, it will only select index `sx`.
     */
    select(sx: number, ex?: number): void;
    /**
     * Stop selecting indices of the array.
     *
     * @param sx The index to stop selecting inclusively from.
     * @param ex The index to stop selecting inclusively to. If omitted, it will only stop selecting index `sx`.
     */
    deselect(sx: number, ex?: number): void;
    /**
     * Synchronize with a chart tracer.
     *
     * @param chartTracer
     */
    chart(chartTracer: ChartTracer): void;
}
